#
# start swarm-registrator
# start consul template
# start haproxy
#
version: '2'

services:
  swarmregistrator:
    image: gliderlabs/registrator:master
    environment:
      - constraint:node==ktr-omega
      - DOCKER_HOST=tcp://192.168.8.50:2378
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      - apps
    command: -internal -cleanup -ttl 15 -ttl-refresh 5 consul://192.168.8.50:8500

  consultemplate:
    image: c12e/consul-template 
    depends_on:
      - haproxy
    volumes:
      - $PWD/docker:/usr/local/bin/docker
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - $PWD/haproxy/:/haproxy/
    environment:
      - constraint:node==ktr-omega
      - DOCKER_HOST=tcp://192.168.8.50:2378
    command: consul-template -consul 192.168.8.50:8500 -template "/haproxy/haproxy.ctmpl:/haproxy/haproxy.cfg:docker exec lb_haproxy_1 /haproxy-start reload"

  haproxy:
    build:
      context: $PWD/haproxy
    networks:
      - apps
    environment: 
      - constraint:node==ktr-omega
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"
    volumes:
      - $PWD/haproxy:/haproxy-override

  demowebserver:
    build:
      context: $PWD/demowebserver
    depends_on:
      - consultemplate
    networks:
      - apps
#    environment:
#      - constraint:node!=ktr-omega

networks:
  apps:
    driver: overlay
